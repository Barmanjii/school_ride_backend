definitions:
  model.Address:
    properties:
      full_address:
        type: string
      lat:
        type: string
      lng:
        type: string
      place_id:
        type: string
    type: object
  model.Parent:
    properties:
      address_id:
        type: string
      age:
        type: integer
      email_address:
        type: string
      emergency_contact_number:
        type: string
      full_name:
        type: string
      mobile_number:
        type: string
      parent_relation:
        allOf:
        - $ref: '#/definitions/model.RelationToChild'
        description: e.g., "Father", "Mother", "Guardian"
    type: object
  model.RelationToChild:
    enum:
    - Father
    - Mother
    - Guardian
    type: string
    x-enum-varnames:
    - RelationFather
    - RelationMother
    - RelationGuardian
  model.School:
    properties:
      address_id:
        type: string
      name:
        type: string
      school_code:
        type: string
    type: object
  model.Student:
    properties:
      age:
        type: integer
      class:
        type: string
      gender:
        type: string
      name:
        type: string
      school_id:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: School Ride Backend Server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /api/v1/addresses/:
    get:
      description: Retrieves a list of all addresses
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Get all addresses
      tags:
      - addresses
    post:
      consumes:
      - application/json
      description: Creates a new address with the provided details
      parameters:
      - description: Address details
        in: body
        name: address
        required: true
        schema:
          $ref: '#/definitions/model.Address'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a new address
      tags:
      - addresses
  /api/v1/parents/:
    get:
      description: Retrieves a list of all parents
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Get all parents
      tags:
      - parents
    post:
      consumes:
      - application/json
      description: Creates a new parent with the provided details
      parameters:
      - description: Parent details
        in: body
        name: parent
        required: true
        schema:
          $ref: '#/definitions/model.Parent'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a new parent
      tags:
      - parents
  /api/v1/schools/:
    get:
      description: Get all schools
      produces:
      - application/json
      responses:
        "200":
          description: OK
      tags:
      - Schools
    post:
      description: Create a new school
      parameters:
      - description: School object
        in: body
        name: school
        required: true
        schema:
          $ref: '#/definitions/model.School'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            items:
              $ref: '#/definitions/model.School'
            type: array
      tags:
      - Schools
  /api/v1/students/:
    get:
      description: Retrieves a list of all students
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "500":
          description: Internal Server Error
      summary: Get all Students
      tags:
      - students
    post:
      consumes:
      - application/json
      description: Creates a new student with the provided details
      parameters:
      - description: Student details
        in: body
        name: student
        required: true
        schema:
          $ref: '#/definitions/model.Student'
      produces:
      - application/json
      responses:
        "201":
          description: Created
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Create a new student
      tags:
      - students
  /healthz/ping:
    get:
      description: Responds with a simple message to indicate the service is running
      produces:
      - application/json
      responses:
        "200":
          description: pong response
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Health check endpoint
      tags:
      - health
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
