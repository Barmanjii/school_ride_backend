{
    "swagger": "2.0",
    "info": {
        "description": "School Ride Backend Server.",
        "title": "Swagger Example API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "paths": {
        "/api/v1/addresses/": {
            "get": {
                "description": "Retrieves a list of all addresses",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Get all addresses",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Creates a new address with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addresses"
                ],
                "summary": "Create a new address",
                "parameters": [
                    {
                        "description": "Address details",
                        "name": "address",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Address"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/parents/": {
            "get": {
                "description": "Retrieves a list of all parents",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parents"
                ],
                "summary": "Get all parents",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Creates a new parent with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "parents"
                ],
                "summary": "Create a new parent",
                "parameters": [
                    {
                        "description": "Parent details",
                        "name": "parent",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Parent"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/schools/": {
            "get": {
                "description": "Get all schools",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Create a new school",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Schools"
                ],
                "parameters": [
                    {
                        "description": "School object",
                        "name": "school",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.School"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.School"
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/students/": {
            "get": {
                "description": "Retrieves a list of all students",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Get all Students",
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "description": "Creates a new student with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "students"
                ],
                "summary": "Create a new student",
                "parameters": [
                    {
                        "description": "Student details",
                        "name": "student",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Student"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/healthz/ping": {
            "get": {
                "description": "Responds with a simple message to indicate the service is running",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check endpoint",
                "responses": {
                    "200": {
                        "description": "pong response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Address": {
            "type": "object",
            "properties": {
                "full_address": {
                    "type": "string"
                },
                "lat": {
                    "type": "string"
                },
                "lng": {
                    "type": "string"
                },
                "place_id": {
                    "type": "string"
                }
            }
        },
        "model.Parent": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "string"
                },
                "age": {
                    "type": "integer"
                },
                "email_address": {
                    "type": "string"
                },
                "emergency_contact_number": {
                    "type": "string"
                },
                "full_name": {
                    "type": "string"
                },
                "mobile_number": {
                    "type": "string"
                },
                "parent_relation": {
                    "description": "e.g., \"Father\", \"Mother\", \"Guardian\"",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.RelationToChild"
                        }
                    ]
                }
            }
        },
        "model.RelationToChild": {
            "type": "string",
            "enum": [
                "Father",
                "Mother",
                "Guardian"
            ],
            "x-enum-varnames": [
                "RelationFather",
                "RelationMother",
                "RelationGuardian"
            ]
        },
        "model.School": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "school_code": {
                    "type": "string"
                }
            }
        },
        "model.Student": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "class": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "school_id": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}